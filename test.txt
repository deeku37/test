import java.util.Arrays;
class Hotel{
      
	  static String name = "Ard ";
	  static String foodItems[] ={null,null,null,};
	  static String ownerName = "LathaDevarj";
	  static String address = "BTM layout";
	  static int index ;
	  // method
	  public static boolean addFoodItems(String foodItem){
		  //"Briyani" != null
		  System.out.println("inside addFoodItems():");
		  boolean isAdded = false;
		  if(foodItem !=null){
		     foodItems[index]= foodItem;
			    index++;
				isAdded = true;
				System.out.println("Food Item added Sucessfully...");
		  }else{
			  System.out.println("food Item can't be null");
		  }
		  System.out.println("end of addFoodItems()");
		  return isAdded;
	  }
           // for data
		   public static void getFoodItems(){
			   for(int index =0; index<foodItems.length; index++){
				   System.out.println(foodItems [index]);
			   }
		   }
		   
		   //update
  public static boolean updateFoodItem(String newFoodItem, String oldFoodItem){
	  boolean isUpdated = false ;
	  //System.out.println("Before updating the food value");
	  for(int pos =0 ; pos<foodItems.length; pos++){
		  
		  //if 
		  //"Briyani" = "Briyani"
		  if (foodItems[pos] == oldFoodItem){
			  
			  //foodItems[0] = "Chicken Sukka"
			  foodItems[pos] = newFoodItem;
			  isUpdated = true ;
			  //System.out.println("Food item value is added sucessfully");
		  }
	  }
	  System.out.println("After updating the food value");
 
		   	   		   return isUpdated;
  }
  //delete
  public static void deleteFoodItems(String foodItem){
// looping the food items from array(foodItems)
    int newIndex , oldIndex;
     for (newIndex=0 ,oldIndex=0; oldIndex< foodItems.length ; oldIndex++){
		 if(foodItems[oldIndex] != foodItem){
			 foodItems[newIndex++] = foodItems[oldIndex];
			
		 }
	 }
	 foodItems = Arrays.copyOf(foodItems , newIndex );
			 return ;
  }

}
//tester code
  class HotelTester{
    public static void main(String foodItems[]){
	    Hotel.addFoodItems("Briyani");
        Hotel.addFoodItems("Rotti");
	    Hotel.addFoodItems("kabab");
	    Hotel.getFoodItems();
  boolean  isFoodItemAdded= Hotel.updateFoodItem("Chicken Sukka" , "kabab" );
	   Hotel.getFoodItems();
       Hotel.deleteFoodItems("Rotti");
	   Hotel.getFoodItems();
}
}


2. The list of ten types of KeyWords are;
                    1.  float - it is a keyword  which can store whole number
					2.  char - char is keyword which has default value space
					3.  for   - it is keyword which is used to create for a loop
					4.  class  - which define class name
					5.  boolean  - it can store only data type true or false 
					6.  if - it is keyword used to define condition or a statement
					7.  new - it is keyword used to create new data types
					8.  import - it is a keyword used to import class ,file
					9.  public - it is a keyword used to access modifers,class,methods and contractors
					10. void - it is specifed method which does not have any return value
					  

 4.	Variable ;
	        it is defined as a registred area allocated in the memory
			There are 4 types of variables,
			                 1.Static Variable:
                                    A Variable	which is used inside the class to define a value/deafult value						 
							     Staic datatype variableName =value;
							    
							 2.Local Variable :
							         A Variable which is used inside the main of the java syntax
							   ex; class Factorial{
                                     public static void main(String factorial[]){
										int factNumber = 8;
										int fact =1;
  
								for(int f=1;f<=factNumber;f++){
										fact= fact*f;
								}
									System.out.println("factorial of 8 is" + fact);
								}
								}
  
							 3.Instance Variable :
							           Variables which are declared outside main method without static keyword.
							    ex;class Door{
										String type;
										String size;
									public void Door(){
										System.out.println("door is used as passage or space to walk in and out ");
									}
									}
									class DoorTester{
								public static void main( String Door []){
            
									Door ref = new  Door ();
									     ref.type = "French doors";
									     ref.size = "10 inch ";
									System.out.println(ref.type +  " " + ref.size);
									
										Door ref1 = new  Door();
											  ref1.type = "Rolling shutter doors";
											  ref1.size = " 8 inch ";
									System.out.println(ref1.type + " " + ref1.size);
							        }
									}
												
							 4.Parameter Variable :
							         These are the variables which are declared inside paranthesis in method.
							         //public static int hospitalWardNumber(wardNumber1,wardNumber2){}
							   ex;  class InstaMart{
							         public static double search (String gloceriesItems){
									 if (gloceriesItems == "Chakki Fresh Atta"){
								  return 100.00;
								 }
									 if (gloceriesItems == "Pea Nut Butter"){
								  return 165.00;
								 }
								  return 0.0;							 
							   }
							   }
							       public static double search (String gloceriesItems , int quantity){
								   if(gloceriesItems == "Kissan Jam"){
									return 20.00*quantity;
								}
								if (gloceriesItems == "Lays"){
								return 50.00*quantity;
								}
								   return 0.0;
								}	
								}
							    class InstaMartTester{
							public static void main(String menu[]){
	 
							double price = InstaMart.search("Lays");
							System.out.println("The Price of 1 Lays  is :" + price);
							double priceWithQuanity = InstaMart.search("Lays", 5);
							System.out.println("The Price of 5 Lays is:" + priceWithQuanity);
							}
							}
								       					
 5.Difference between permitive datatype and non permitive data type are
             Primitive datatype: These are the datatypes which starts with the lowercase.
			                  ex: byte, short, int, long.
			Default values are : 0,0.0, false etc.
			Non premitive datatype: These are the datatypes which starts with uppercase.
			                 ex: ClassName, String, System, Reference, Interface.
			Default values are : null
			
			
6.		Identifier :
                It is defined as any name which is used in source code is called identifier.
		Keyword :
		        It is defined as keywords are pre-defined / built-in words which has some meaning.
		Literals :
             	It is defined as values in source code is considered as literals.
		Array :
		      It is  defined as a container which is used to store multiple values of same type.
		methods : 
		       It is defined as a method is functionality or behaviour of a class.	

			   
7. Method overloading ; 
                 Two or more methods with same method name but different in their parameter list is known as method overloading.
         ex;
				   class Calculator{
				public static void main(String calculate[]){ 
				 int total = mul(13,22);
				 int total = mul(13,2,53);
				System.out.println(total1);
				System.out.println(total2);

				}
				public static int mul(int num1, int num2){
				int total=num1*num2;
				return total;
				}
				public static int mul(int num1, int num2, int num3){
				int total=num1*num2*num3;
				return total;
				}
				}

8.InfinteLoop
      for(int index = 0; ;index++){
	
		}				
				
10.MainMethod
 
		//public static void main(String args[]){}

		<access modifiers> return type <method name> (parameter1, parameter2, parameter3, …………………., parametern) {
			//body of method or block of method
		}
				

				
					